# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = ../../src
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/kfactors
pkgincludedir = $(includedir)/kfactors
pkglibdir = $(libdir)/kfactors
pkglibexecdir = $(libexecdir)/kfactors
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = compute_kfactors$(EXEEXT) \
	compute_kfactors_with_phases$(EXEEXT) \
	compute_kfactors_j0$(EXEEXT) \
	compute_kfactors_with_phases_j0$(EXEEXT) \
	hadron_3pt_xml$(EXEEXT) redstar_intrfc$(EXEEXT)
check_PROGRAMS = tes_ph$(EXEEXT) extract_ph$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/pac_adat_link_cxx_func.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_compute_kfactors_OBJECTS = exe/compute_kfactors.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/subduction.$(OBJEXT) \
	lib/pol_vec.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/k_factor.$(OBJEXT) lib/levi_civita.$(OBJEXT) \
	io/xml_tools.$(OBJEXT)
compute_kfactors_OBJECTS = $(am_compute_kfactors_OBJECTS)
compute_kfactors_LDADD = $(LDADD)
compute_kfactors_DEPENDENCIES =
am_compute_kfactors_j0_OBJECTS = exe/compute_kfactors_j0.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/subduction.$(OBJEXT) \
	lib/pol_vec.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/k_factor.$(OBJEXT) lib/levi_civita.$(OBJEXT)
compute_kfactors_j0_OBJECTS = $(am_compute_kfactors_j0_OBJECTS)
compute_kfactors_j0_LDADD = $(LDADD)
compute_kfactors_j0_DEPENDENCIES =
am_compute_kfactors_with_phases_OBJECTS =  \
	exe/compute_kfactors_with_phases.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/subduction.$(OBJEXT) \
	lib/pol_vec.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/k_factor.$(OBJEXT) lib/levi_civita.$(OBJEXT) \
	lib/phase.$(OBJEXT)
compute_kfactors_with_phases_OBJECTS =  \
	$(am_compute_kfactors_with_phases_OBJECTS)
compute_kfactors_with_phases_LDADD = $(LDADD)
compute_kfactors_with_phases_DEPENDENCIES =
am_compute_kfactors_with_phases_j0_OBJECTS =  \
	exe/compute_kfactors_with_phases_j0.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/subduction.$(OBJEXT) \
	lib/pol_vec.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/k_factor.$(OBJEXT) lib/levi_civita.$(OBJEXT) \
	lib/phase.$(OBJEXT)
compute_kfactors_with_phases_j0_OBJECTS =  \
	$(am_compute_kfactors_with_phases_j0_OBJECTS)
compute_kfactors_with_phases_j0_LDADD = $(LDADD)
compute_kfactors_with_phases_j0_DEPENDENCIES =
am_extract_ph_OBJECTS = test/extract_ph.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/subduction.$(OBJEXT) \
	lib/pol_vec.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/k_factor.$(OBJEXT) lib/levi_civita.$(OBJEXT) \
	lib/phase.$(OBJEXT)
extract_ph_OBJECTS = $(am_extract_ph_OBJECTS)
extract_ph_LDADD = $(LDADD)
extract_ph_DEPENDENCIES =
am_hadron_3pt_xml_OBJECTS = io/hadron_3pt.xml.$(OBJEXT) \
	io/xml_tools.$(OBJEXT)
hadron_3pt_xml_OBJECTS = $(am_hadron_3pt_xml_OBJECTS)
hadron_3pt_xml_LDADD = $(LDADD)
hadron_3pt_xml_DEPENDENCIES =
am_redstar_intrfc_OBJECTS = io/redstar_intrfc.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/subduction.$(OBJEXT) \
	lib/pol_vec.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/k_factor.$(OBJEXT) lib/levi_civita.$(OBJEXT) \
	io/xml_tools.$(OBJEXT)
redstar_intrfc_OBJECTS = $(am_redstar_intrfc_OBJECTS)
redstar_intrfc_LDADD = $(LDADD)
redstar_intrfc_DEPENDENCIES =
am_tes_ph_OBJECTS = test/tes_ph.$(OBJEXT) lib/rot_matrx.$(OBJEXT) \
	lib/little_group.$(OBJEXT) lib/kfac_utils.$(OBJEXT) \
	lib/subduction.$(OBJEXT) lib/k_factor.$(OBJEXT) \
	lib/levi_civita.$(OBJEXT) lib/pol_vec.$(OBJEXT) \
	lib/irreps_and_rows.$(OBJEXT)
tes_ph_OBJECTS = $(am_tes_ph_OBJECTS)
tes_ph_LDADD = $(LDADD)
tes_ph_DEPENDENCIES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = exe/$(DEPDIR)/compute_kfactors.Po \
	exe/$(DEPDIR)/compute_kfactors_j0.Po \
	exe/$(DEPDIR)/compute_kfactors_with_phases.Po \
	exe/$(DEPDIR)/compute_kfactors_with_phases_j0.Po \
	io/$(DEPDIR)/hadron_3pt.xml.Po io/$(DEPDIR)/redstar_intrfc.Po \
	io/$(DEPDIR)/xml_tools.Po lib/$(DEPDIR)/irreps_and_rows.Po \
	lib/$(DEPDIR)/k_factor.Po lib/$(DEPDIR)/kfac_utils.Po \
	lib/$(DEPDIR)/levi_civita.Po lib/$(DEPDIR)/little_group.Po \
	lib/$(DEPDIR)/phase.Po lib/$(DEPDIR)/pol_vec.Po \
	lib/$(DEPDIR)/rot_matrx.Po lib/$(DEPDIR)/subduction.Po \
	test/$(DEPDIR)/extract_ph.Po test/$(DEPDIR)/tes_ph.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(compute_kfactors_SOURCES) $(compute_kfactors_j0_SOURCES) \
	$(compute_kfactors_with_phases_SOURCES) \
	$(compute_kfactors_with_phases_j0_SOURCES) \
	$(extract_ph_SOURCES) $(hadron_3pt_xml_SOURCES) \
	$(redstar_intrfc_SOURCES) $(tes_ph_SOURCES)
DIST_SOURCES = $(compute_kfactors_SOURCES) \
	$(compute_kfactors_j0_SOURCES) \
	$(compute_kfactors_with_phases_SOURCES) \
	$(compute_kfactors_with_phases_j0_SOURCES) \
	$(extract_ph_SOURCES) $(hadron_3pt_xml_SOURCES) \
	$(redstar_intrfc_SOURCES) $(tes_ph_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/archanar/Kinematic_factor/compute_Kfactors/config/missing aclocal-1.16
ADAT_CONFIG = /Users/archanar/Kinematic_factor/adat_devel_install/bin/adat-config
ADAT_CXXFLAGS = -std=c++0x -O3 -I/Users/archanar/Kinematic_factor/adat_devel_install/include -I/usr/local/Cellar/libxml2/2.9.7/include/libxml2
ADAT_LDFLAGS = -L/Users/archanar/Kinematic_factor/adat_devel_install/lib
ADAT_LIBS = -ladat -lfiledb -lfilehash -lXPathReader -lxmlWriter -lMinuit2Base -L/usr/local/Cellar/libxml2/2.9.7/lib -lxml2 -lz -lpthread -liconv -lm -lgmp -lgmpxx -lstdc++
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /Users/archanar/Kinematic_factor/compute_Kfactors/config/missing autoconf
AUTOHEADER = ${SHELL} /Users/archanar/Kinematic_factor/compute_Kfactors/config/missing autoheader
AUTOMAKE = ${SHELL} /Users/archanar/Kinematic_factor/compute_Kfactors/config/missing automake-1.16
AWK = awk
CC = gcc-8
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -mtune=native -fopenmp -fbounds-check
CPPFLAGS = 
CXX = g++-8
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -mtune=native -fopenmp -fbounds-check
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"Kfactors\" -DPACKAGE_TARNAME=\"kfactors\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"Kfactors\ 1.0\" -DPACKAGE_BUGREPORT=\"archanar@jlab.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"kfactors\" -DVERSION=\"1.0\" -DPACKAGE=\"kfactors\" -DVERSION=\"1.0\"
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/archanar/Kinematic_factor/compute_Kfactors/config/missing makeinfo
MKDIR_P = ../../config/install-sh -c -d
OBJEXT = o
PACKAGE = kfactors
PACKAGE_BUGREPORT = archanar@jlab.org
PACKAGE_NAME = Kfactors
PACKAGE_STRING = Kfactors 1.0
PACKAGE_TARNAME = kfactors
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.0
abs_builddir = /Users/archanar/Kinematic_factor/compute_Kfactors/build/src
abs_srcdir = /Users/archanar/Kinematic_factor/compute_Kfactors/build/../src
abs_top_builddir = /Users/archanar/Kinematic_factor/compute_Kfactors/build
abs_top_srcdir = /Users/archanar/Kinematic_factor/compute_Kfactors/build/..
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/archanar/Kinematic_factor/compute_Kfactors/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/archanar/Kinematic_factor/compute_Kfactors_install
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../src
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../..

#
# Boiler Plate stuff: Autoconf Substitutions etc
#
AM_CXXFLAGS = -I../../src \
		-O3 -mtune=native -fopenmp -fbounds-check -std=c++0x -O3 -I/Users/archanar/Kinematic_factor/adat_devel_install/include -I/usr/local/Cellar/libxml2/2.9.7/include/libxml2 

AM_LDFLAGS = -L../src \
                -L/Users/archanar/Kinematic_factor/adat_devel_install/lib

LDADD = -ladat -lfiledb -lfilehash -lXPathReader -lxmlWriter -lMinuit2Base -L/usr/local/Cellar/libxml2/2.9.7/lib -lxml2 -lz -lpthread -liconv -lm -lgmp -lgmpxx -lstdc++  

##############################################################
compute_kfactors_SOURCES = exe/compute_kfactors.cc  lib/irreps_and_rows.cc  lib/kfac_utils.cc  lib/little_group.cc  lib/subduction.cc  lib/pol_vec.cc  lib/rot_matrx.cc  lib/k_factor.cc  lib/levi_civita.cc  io/xml_tools.cc 
compute_kfactors_with_phases_SOURCES = exe/compute_kfactors_with_phases.cc  lib/irreps_and_rows.cc  lib/kfac_utils.cc  lib/little_group.cc  lib/subduction.cc  lib/pol_vec.cc  lib/rot_matrx.cc  lib/k_factor.cc  lib/levi_civita.cc  lib/phase.cc
compute_kfactors_with_phases_j0_SOURCES = exe/compute_kfactors_with_phases_j0.cc  lib/irreps_and_rows.cc  lib/kfac_utils.cc  lib/little_group.cc  lib/subduction.cc  lib/pol_vec.cc  lib/rot_matrx.cc  lib/k_factor.cc  lib/levi_civita.cc  lib/phase.cc
compute_kfactors_j0_SOURCES = exe/compute_kfactors_j0.cc  lib/irreps_and_rows.cc  lib/kfac_utils.cc  lib/little_group.cc  lib/subduction.cc  lib/pol_vec.cc  lib/rot_matrx.cc  lib/k_factor.cc  lib/levi_civita.cc
tes_ph_SOURCES = test/tes_ph.cc  lib/rot_matrx.cc lib/little_group.cc lib/kfac_utils.cc lib/subduction.cc    lib/k_factor.cc  lib/levi_civita.cc  lib/pol_vec.cc    lib/irreps_and_rows.cc
extract_ph_SOURCES = test/extract_ph.cc lib/irreps_and_rows.cc  lib/kfac_utils.cc  lib/little_group.cc  lib/subduction.cc  lib/pol_vec.cc  lib/rot_matrx.cc  lib/k_factor.cc  lib/levi_civita.cc  lib/phase.cc
hadron_3pt_xml_SOURCES = io/hadron_3pt.xml.cc io/xml_tools.cc
redstar_intrfc_SOURCES = io/redstar_intrfc.cc  lib/irreps_and_rows.cc  lib/kfac_utils.cc  lib/little_group.cc  lib/subduction.cc lib/pol_vec.cc  lib/rot_matrx.cc  lib/k_factor.cc  lib/levi_civita.cc  io/xml_tools.cc

##############################################################

#BUILT_SOURCES = levi_civita.cc irreps_and_rows.cc kfac_utils.cc euler_mat.cc irreps_and_rows.cc

##############################################################

#
# The following rule will always try to rebuild libadat.a when you 
# try to compile anything else
#
####DEPENDENCIES = build_lib ${lib_LIBRARIES}
DEPENDENCIES = ${lib_LIBRARIES}
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
exe/$(am__dirstamp):
	@$(MKDIR_P) exe
	@: > exe/$(am__dirstamp)
exe/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) exe/$(DEPDIR)
	@: > exe/$(DEPDIR)/$(am__dirstamp)
exe/compute_kfactors.$(OBJEXT): exe/$(am__dirstamp) \
	exe/$(DEPDIR)/$(am__dirstamp)
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)
lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lib/$(DEPDIR)
	@: > lib/$(DEPDIR)/$(am__dirstamp)
lib/irreps_and_rows.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/kfac_utils.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/little_group.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/subduction.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/pol_vec.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/rot_matrx.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/k_factor.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/levi_civita.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
io/$(am__dirstamp):
	@$(MKDIR_P) io
	@: > io/$(am__dirstamp)
io/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) io/$(DEPDIR)
	@: > io/$(DEPDIR)/$(am__dirstamp)
io/xml_tools.$(OBJEXT): io/$(am__dirstamp) \
	io/$(DEPDIR)/$(am__dirstamp)

compute_kfactors$(EXEEXT): $(compute_kfactors_OBJECTS) $(compute_kfactors_DEPENDENCIES) $(EXTRA_compute_kfactors_DEPENDENCIES) 
	@rm -f compute_kfactors$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(compute_kfactors_OBJECTS) $(compute_kfactors_LDADD) $(LIBS)
exe/compute_kfactors_j0.$(OBJEXT): exe/$(am__dirstamp) \
	exe/$(DEPDIR)/$(am__dirstamp)

compute_kfactors_j0$(EXEEXT): $(compute_kfactors_j0_OBJECTS) $(compute_kfactors_j0_DEPENDENCIES) $(EXTRA_compute_kfactors_j0_DEPENDENCIES) 
	@rm -f compute_kfactors_j0$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(compute_kfactors_j0_OBJECTS) $(compute_kfactors_j0_LDADD) $(LIBS)
exe/compute_kfactors_with_phases.$(OBJEXT): exe/$(am__dirstamp) \
	exe/$(DEPDIR)/$(am__dirstamp)
lib/phase.$(OBJEXT): lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)

compute_kfactors_with_phases$(EXEEXT): $(compute_kfactors_with_phases_OBJECTS) $(compute_kfactors_with_phases_DEPENDENCIES) $(EXTRA_compute_kfactors_with_phases_DEPENDENCIES) 
	@rm -f compute_kfactors_with_phases$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(compute_kfactors_with_phases_OBJECTS) $(compute_kfactors_with_phases_LDADD) $(LIBS)
exe/compute_kfactors_with_phases_j0.$(OBJEXT): exe/$(am__dirstamp) \
	exe/$(DEPDIR)/$(am__dirstamp)

compute_kfactors_with_phases_j0$(EXEEXT): $(compute_kfactors_with_phases_j0_OBJECTS) $(compute_kfactors_with_phases_j0_DEPENDENCIES) $(EXTRA_compute_kfactors_with_phases_j0_DEPENDENCIES) 
	@rm -f compute_kfactors_with_phases_j0$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(compute_kfactors_with_phases_j0_OBJECTS) $(compute_kfactors_with_phases_j0_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/extract_ph.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

extract_ph$(EXEEXT): $(extract_ph_OBJECTS) $(extract_ph_DEPENDENCIES) $(EXTRA_extract_ph_DEPENDENCIES) 
	@rm -f extract_ph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(extract_ph_OBJECTS) $(extract_ph_LDADD) $(LIBS)
io/hadron_3pt.xml.$(OBJEXT): io/$(am__dirstamp) \
	io/$(DEPDIR)/$(am__dirstamp)

hadron_3pt_xml$(EXEEXT): $(hadron_3pt_xml_OBJECTS) $(hadron_3pt_xml_DEPENDENCIES) $(EXTRA_hadron_3pt_xml_DEPENDENCIES) 
	@rm -f hadron_3pt_xml$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hadron_3pt_xml_OBJECTS) $(hadron_3pt_xml_LDADD) $(LIBS)
io/redstar_intrfc.$(OBJEXT): io/$(am__dirstamp) \
	io/$(DEPDIR)/$(am__dirstamp)

redstar_intrfc$(EXEEXT): $(redstar_intrfc_OBJECTS) $(redstar_intrfc_DEPENDENCIES) $(EXTRA_redstar_intrfc_DEPENDENCIES) 
	@rm -f redstar_intrfc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(redstar_intrfc_OBJECTS) $(redstar_intrfc_LDADD) $(LIBS)
test/tes_ph.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

tes_ph$(EXEEXT): $(tes_ph_OBJECTS) $(tes_ph_DEPENDENCIES) $(EXTRA_tes_ph_DEPENDENCIES) 
	@rm -f tes_ph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tes_ph_OBJECTS) $(tes_ph_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f exe/*.$(OBJEXT)
	-rm -f io/*.$(OBJEXT)
	-rm -f lib/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include exe/$(DEPDIR)/compute_kfactors.Po # am--include-marker
include exe/$(DEPDIR)/compute_kfactors_j0.Po # am--include-marker
include exe/$(DEPDIR)/compute_kfactors_with_phases.Po # am--include-marker
include exe/$(DEPDIR)/compute_kfactors_with_phases_j0.Po # am--include-marker
include io/$(DEPDIR)/hadron_3pt.xml.Po # am--include-marker
include io/$(DEPDIR)/redstar_intrfc.Po # am--include-marker
include io/$(DEPDIR)/xml_tools.Po # am--include-marker
include lib/$(DEPDIR)/irreps_and_rows.Po # am--include-marker
include lib/$(DEPDIR)/k_factor.Po # am--include-marker
include lib/$(DEPDIR)/kfac_utils.Po # am--include-marker
include lib/$(DEPDIR)/levi_civita.Po # am--include-marker
include lib/$(DEPDIR)/little_group.Po # am--include-marker
include lib/$(DEPDIR)/phase.Po # am--include-marker
include lib/$(DEPDIR)/pol_vec.Po # am--include-marker
include lib/$(DEPDIR)/rot_matrx.Po # am--include-marker
include lib/$(DEPDIR)/subduction.Po # am--include-marker
include test/$(DEPDIR)/extract_ph.Po # am--include-marker
include test/$(DEPDIR)/tes_ph.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f exe/$(DEPDIR)/$(am__dirstamp)
	-rm -f exe/$(am__dirstamp)
	-rm -f io/$(DEPDIR)/$(am__dirstamp)
	-rm -f io/$(am__dirstamp)
	-rm -f lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f lib/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
		-rm -f exe/$(DEPDIR)/compute_kfactors.Po
	-rm -f exe/$(DEPDIR)/compute_kfactors_j0.Po
	-rm -f exe/$(DEPDIR)/compute_kfactors_with_phases.Po
	-rm -f exe/$(DEPDIR)/compute_kfactors_with_phases_j0.Po
	-rm -f io/$(DEPDIR)/hadron_3pt.xml.Po
	-rm -f io/$(DEPDIR)/redstar_intrfc.Po
	-rm -f io/$(DEPDIR)/xml_tools.Po
	-rm -f lib/$(DEPDIR)/irreps_and_rows.Po
	-rm -f lib/$(DEPDIR)/k_factor.Po
	-rm -f lib/$(DEPDIR)/kfac_utils.Po
	-rm -f lib/$(DEPDIR)/levi_civita.Po
	-rm -f lib/$(DEPDIR)/little_group.Po
	-rm -f lib/$(DEPDIR)/phase.Po
	-rm -f lib/$(DEPDIR)/pol_vec.Po
	-rm -f lib/$(DEPDIR)/rot_matrx.Po
	-rm -f lib/$(DEPDIR)/subduction.Po
	-rm -f test/$(DEPDIR)/extract_ph.Po
	-rm -f test/$(DEPDIR)/tes_ph.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f exe/$(DEPDIR)/compute_kfactors.Po
	-rm -f exe/$(DEPDIR)/compute_kfactors_j0.Po
	-rm -f exe/$(DEPDIR)/compute_kfactors_with_phases.Po
	-rm -f exe/$(DEPDIR)/compute_kfactors_with_phases_j0.Po
	-rm -f io/$(DEPDIR)/hadron_3pt.xml.Po
	-rm -f io/$(DEPDIR)/redstar_intrfc.Po
	-rm -f io/$(DEPDIR)/xml_tools.Po
	-rm -f lib/$(DEPDIR)/irreps_and_rows.Po
	-rm -f lib/$(DEPDIR)/k_factor.Po
	-rm -f lib/$(DEPDIR)/kfac_utils.Po
	-rm -f lib/$(DEPDIR)/levi_civita.Po
	-rm -f lib/$(DEPDIR)/little_group.Po
	-rm -f lib/$(DEPDIR)/phase.Po
	-rm -f lib/$(DEPDIR)/pol_vec.Po
	-rm -f lib/$(DEPDIR)/rot_matrx.Po
	-rm -f lib/$(DEPDIR)/subduction.Po
	-rm -f test/$(DEPDIR)/extract_ph.Po
	-rm -f test/$(DEPDIR)/tes_ph.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


${bin_PROGRAMS}: ${DEPENDENCIES}
${EXTRA_PROGRAMS}: ${DEPENDENCIES}

# build lib is a target that goes to the build dir of the library and 
# does a make to make sure all those dependencies are OK. In order
# for it to be done every time, we have to make it a 'phony' target
.PHONY: build_lib
build_lib:
	cd ../lib ; $(MAKE)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
